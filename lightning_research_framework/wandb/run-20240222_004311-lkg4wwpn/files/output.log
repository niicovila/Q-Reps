[research] Using device cpu
[research] Training a model with 3230734 trainable parameters.
[research] Replay Buffer Storage Path /var/folders/rz/cwn_bhpd7x9bm5nv218wrcx80000gn/T/replay_buffer_xg8dxchh
[34m[1mwandb[39m[22m: [33mWARNING[39m When using several event log directories, please call `wandb.tensorboard.patch(root_logdir="...")` before `wandb.init`
/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/gym/utils/passive_env_checker.py:174: UserWarning: [33mWARN: Future gym versions will require that `Env.reset` can be passed a `seed` instead of using `Env.seed` for resetting the environment random number generator.
  logger.warn(
/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/gym/utils/passive_env_checker.py:187: UserWarning: [33mWARN: Future gym versions will require that `Env.reset` can be passed `options` to allow the environment initialisation to be passed additional information.
  logger.warn(
/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/gym/utils/passive_env_checker.py:195: UserWarning: [33mWARN: The result returned by `env.reset()` was not a tuple of the form `(obs, info)`, where `obs` is a observation and `info` is a dictionary containing additional information. Actual type: `<class 'numpy.ndarray'>`
  logger.warn(
/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/gym/utils/passive_env_checker.py:219: DeprecationWarning: [33mWARN: Core environment is written in old step API which returns one bool instead of two. It is recommended to rewrite the environment with new step API. 
  logger.deprecation(
/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/gym/utils/passive_env_checker.py:225: DeprecationWarning: `np.bool8` is a deprecated alias for `np.bool_`.  (Deprecated NumPy 1.24)
  if not isinstance(done, (bool, np.bool8)):
Traceback (most recent call last):
  File "/Users/nicolasvila/workplace/uni/tfg_v2/tests/lightning_research_framework/scripts/train.py", line 15, in <module>
    train(config, args.path, device=args.device)
  File "/Users/nicolasvila/workplace/uni/tfg_v2/tests/lightning_research_framework/research/utils/trainer.py", line 103, in train
    model.train(path, schedule=schedule, schedule_kwargs=config['schedule_kwargs'], use_wandb=use_wandb, **config['train_kwargs'])
  File "/Users/nicolasvila/workplace/uni/tfg_v2/tests/lightning_research_framework/research/algs/base.py", line 255, in train
    train_metrics = self._train_step(batch)
                    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/workplace/uni/tfg_v2/tests/lightning_research_framework/research/algs/gumbel_sac_v2.py", line 277, in _train_step
    dist = self.network.actor(batch['obs'])
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/workplace/uni/tfg_v2/tests/lightning_research_framework/research/networks/mlp.py", line 202, in forward
    mu, log_std = self.mlp(obs).chunk(2, dim=-1)
                  ^^^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/workplace/uni/tfg_v2/tests/lightning_research_framework/research/networks/common.py", line 30, in forward
    return self.net(x)
           ^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/container.py", line 215, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/nicolasvila/miniconda3/lib/python3.11/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt